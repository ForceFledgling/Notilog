from sqlalchemy import create_engine
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import sessionmaker

from .config import settings

# Создание базы данных
Base = declarative_base()

# Настройка движка базы данных
engine = create_engine(settings.DATABASE_URL)
SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)

def init_db():
    """
    Инициализирует базу данных, создавая все таблицы, определенные в моделях.

    Эта функция используется для первоначальной настройки базы данных. Она создает все таблицы, 
    определенные в моделях SQLAlchemy, используя метаданные `Base`. Это необходимо при первом запуске приложения
    или при необходимости вручную инициализировать структуру базы данных.

    Чтобы избежать циклических импортов, импорт моделей происходит внутри функции. Это гарантирует,
    что все модели загружены и готовы к созданию соответствующих таблиц.

    После вызова этой функции база данных будет содержать все необходимые таблицы, определенные в моделях.

    Примечание:
        Этот метод следует использовать с осторожностью, так как он автоматически создает все таблицы,
        и потенциально может перезаписать структуру базы данных, если она была изменена.
    """
    from . import models  # Импорт моделей здесь для предотвращения циклического импорта
    Base.metadata.create_all(bind=engine)


def get_db():
    """
    Создает и управляет сессией базы данных для каждого запроса.

    Эта функция является генератором, который создает сессию базы данных (объект `SessionLocal`),
    и предоставляет её для использования в маршрутах или других функциях, где требуется взаимодействие с базой данных.
    
    Сессия передается через `yield`, что позволяет FastAPI автоматически управлять её временем жизни.
    После завершения запроса сессия автоматически закрывается в блоке `finally`, что гарантирует освобождение ресурсов,
    даже если в процессе работы возникнет исключение.

    Returns:
        : Генератор, который предоставляет объект сессии базы данных (`Session`).
    """
    db = SessionLocal()
    try:
        yield db
    finally:
        db.close()

